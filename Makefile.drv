#---------------------------------------------------------------------
#
# Copyright (c) 2018 CloudMakers, s. r. o.
# All rights reserved.
#
# You can use this software under the terms of 'INDIGO Astronomy
# open-source license' (see LICENSE.md).
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHORS 'AS IS' AND ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
# GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#---------------------------------------------------------------------

# This file is supposed to be called from within indigo_XXX_drivers/YYY folder if Makefile is not present.

include ../../Makefile.inc
ifneq ($(wildcard Makefile.inc),)
include Makefile.inc
endif

DRIVER = indigo_$(notdir $(shell pwd))
rwildcard=$(foreach d,$(wildcard $1*),$(call rwildcard,$d/,$2) $(filter $(subst *,%,$2),$d))

DRIVER_A = $(BUILD_DRIVERS)/$(DRIVER).a
DRIVER_SO = $(BUILD_DRIVERS)/$(DRIVER).$(SOEXT)
ifeq ($(wildcard $(DRIVER)_main.c),)
	DRIVER_EXECUTABLE =
	DRIVER_MAIN_O =
else
	DRIVER_EXECUTABLE = $(BUILD_DRIVERS)/$(DRIVER)
	DRIVER_MAIN_O = $(DRIVER)_main.o
endif
DRIVER_O = $(filter-out $(DRIVER_MAIN_O),$(addsuffix .o, $(basename $(notdir $(wildcard *.c) $(wildcard *.m)))))
RULES = $(notdir $(call rwildcard,,*.rules))
XML = $(notdir $(wildcard indi_go_*.xml))

SDK_INCLUDE ?= $(addprefix -I, $(wildcard bin_externals/*/include))
ifeq ($(OS_DETECTED),Darwin)
	SDK_LIB_A ?= $(wildcard bin_externals/*/lib/macOS/*.a)
	SDK_LIB_SO ?= $(wildcard bin_externals/*/lib/macOS/*.dylib)
endif
ifeq ($(OS_DETECTED),Linux)
	SDK_LIB_A ?= $(wildcard bin_externals/*/lib/Linux/$(ARCH_DETECTED)/*.a)
	SDK_LIB_SO ?= $(wildcard bin_externals/*/lib/Linux/$(ARCH_DETECTED)/*.so)
endif
SDK_LIB ?= $(addprefix -L, $(dir $(SDK_LIB_A) $(SDK_LIB_SO))) $(addprefix -l, $(subst lib, , $(basename $(notdir $(SDK_LIB_A) $(SDK_LIB_SO)))))

CFLAGS += $(SDK_INCLUDE)

.PHONY: all status install uninstall make_sdk clean_sdk

all: status $(MAKE_SDK) $(DRIVER_A) $(DRIVER_SO) $(DRIVER_EXECUTABLE)

status:
	@printf "\n$(DRIVER) ---------------------------------------\n\n"
	@printf "Archive:    $(DRIVER_A)\n"
	@printf "SO library: $(DRIVER_SO)\n"
ifneq ($(DRIVER_EXECUTABLE),)
	@printf "Executable: $(DRIVER_EXECUTABLE)\n"
endif
ifneq ($(RULES),)
	@printf "Rules:      $(RULES)\n"
endif
ifneq ($(XML),)
	@printf "XML:        $(XML)\n"
endif
ifneq ($(strip $(SDK_LIB_A) $(SDK_LIB_SO)),)
	@printf "SDK:        $(strip $(SDK_LIB_A) $(SDK_LIB_SO)) $(SDK_INCLUDE) $(SDK_LIB)\n"
endif
	@printf "\n"

$(DRIVER_A): $(DRIVER_O)
	$(AR) $(ARFLAGS) $@ $^

$(DRIVER_SO): $(DRIVER_A)
	$(CC) -shared -o $@ $^ $(LDFLAGS) -lindigo $(SDK_LIB)

$(DRIVER_EXECUTABLE): $(DRIVER_A) $(DRIVER_MAIN_O)
	$(CC) -o $@ $^ $(LDFLAGS) -lindigo $(SDK_LIB)

install: status $(INSTALL_SDK)
	install -m 0644 $(DRIVER_SO) $(INSTALL_LIB)
ifneq ($(DRIVER_EXECUTABLE),)
	install -m 0755 $(DRIVER_EXECUTABLE) $(INSTALL_BIN)
endif
ifneq ($(SDK_LIB_SO),)
	install -m 0644 $(SDK_LIB_SO) $(INSTALL_LIB)
endif
ifneq ($(RULES),)
	install -m 0644 $(RULES) $(INSTALL_RULES)/99-$(DRIVER).rules
endif
ifneq ($(XML),)
	install -m 0644 $(XML) $(INSTALL_SHARE)/indi
endif

uninstall: status $(UNINSTALL_SDK)
	rm -f $(INSTALL_LIB)/$(DRIVER).$(SOEXT) $(INSTALL_BIN)/$(DRIVER) $(INSTALL_RULES)/99-$(DRIVER).rules $(INSTALL_SHARE)/indi/$(XML)

clean: status $(CLEAN_SDK)
	rm -f $(DRIVER_O) $(DRIVER_MAIN_O) $(DRIVER_A) $(DRIVER_SO) $(DRIVER_EXECUTABLE)

$(SDK_LIB_A):
	cd $(SDK_DIR); make

$(SDK_LIB_SO):
	cd $(SDK_DIR); make

clean_sdk:
	cd $(SDK_DIR); make clean
